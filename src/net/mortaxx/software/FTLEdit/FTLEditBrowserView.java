package net.mortaxx.software.FTLEdit;

/*
Copyright (c) 2009-2019, Christian Hecht. 
All rights reserved.

This software is published under the "Simplified BSD License" (2-clause license)

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this
   list of conditions and the following disclaimer.
2. Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

The views and conclusions contained in the software and documentation are those
of the authors and should not be interpreted as representing official policies,
either expressed or implied, of the FTLEdit project.

These class is part of program FTLEdit.

FTLEdit includes and uses libraries and source code from some other contributors:

--> FileTree.java - Extension of JTree class to show a file system explorer - Copyright 2005 by Janni Kovacs
- Copied from the tutorial at java-forum.org
- For further information, see <http://www.java-forum.org/java-faq-beitraege/23430-jtree-anwendung-1-directorychooser.html>

--> Parts of GUI code generated by GuiGenie - Copyright (c) 2004 Mario Awad.
- Home Page http://guigenie.cjb.net - Check often for new versions!

--> Rsyntaxtextarea/RSTALanguageSupport/AutoComplete
Copyright (c) 2012, Robert Futrell - https://github.com/bobbylight

--> Rhino
Copyright (c) 2012, Mozilla Corporation - https://github.com/mozilla/rhino

*/

import java.awt.BorderLayout;
import java.awt.Canvas;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.Component;
import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;

import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JPanel;

// import chrriis.dj.nativeswing.swtimpl.components.JWebBrowser;
//import com.teamdev.jxbrowser.chromium.Browser;
//import com.teamdev.jxbrowser.chromium.BrowserFactory;
/*import org.cef.CefApp;
import org.cef.CefApp.CefAppState;
import org.cef.CefClient;
import org.cef.CefSettings;
import org.cef.OS;
import org.cef.browser.CefBrowser;
import org.cef.browser.CefFrame;
import org.cef.handler.CefAppHandlerAdapter;
import org.cef.handler.CefDisplayHandlerAdapter;
import org.cef.handler.CefFocusHandlerAdapter;*/

public class FTLEditBrowserView extends JDialog{

	URL thePreviewURL;
	String pv;
//	JWebBrowser webBrowser;
/*    CefApp cefApp_;
    CefClient client_;
    CefBrowser browser_;
    Component browerUI_;*/

	public FTLEditBrowserView(JFrame owner, String title, boolean modal) {
		
		super(owner, title, modal);
//		initBrowser();
	}
	
	void initBrowser() {
	  
/*	       CefApp.addAppHandler(new CefAppHandlerAdapter(null) {
	            @Override
	            public void stateHasChanged(org.cef.CefApp.CefAppState state) {
	                // Shutdown the app if the native CEF part is terminated
	                if (state == CefAppState.TERMINATED) System.exit(0);
	            }
	        });
	        CefSettings settings = new CefSettings();
	        settings.windowless_rendering_enabled = false;
	        cefApp_ = CefApp.getInstance(settings);
	        client_ = cefApp_.createClient();
	        browser_ = client_.createBrowser("", false, false);
	        browerUI_ = browser_.getUIComponent();*/
//	  	jxbrowser = BrowserFactory.create();	
		
/*		JWebBrowser.destroyOnFinalization();
		webBrowser = new JWebBrowser(); 

	    webBrowser.setBarsVisible(false);
	    webBrowser.setStatusBarVisible(false);

*/
//		JPanel browserpanel = new JPanel(new BorderLayout());
//		browserpanel.add(jxbrowser.getView().getComponent());
//		browserpanel.add(browerUI_);
//		this.add(browserpanel);

//	    webBrowser.setHTMLContent("");
//		jxbrowser.loadHTML("<html><body></body></html>");
	}
	
//	void openPreview() {
		
/*		previewShell.open();
		
// Das Vorschau-Fenster darf nicht vom Benutzer geschlossen werden
		
		previewShell.addListener(SWT.Close, new Listener() {
	        public void handleEvent(Event event) {
/*	          int style = SWT.APPLICATION_MODAL | SWT.YES | SWT.NO;
	          MessageBox messageBox = new MessageBox(previewShell, style);
	          messageBox.setText("Information");
	          messageBox.setMessage("Close the shell?");
	          event.doit = messageBox.open() == SWT.YES;*/
//	          event.doit = false;
//	        }
//	      });


// Auslagern der SWT Event Loop in eigenen Thread - 
// Funktioniert auf dem Mac - macht aber Probleme unter Windows !? - Test hat ergeben, ist so !!!
		
/*		new Thread() {
		 public void run() {
			  Display.getDefault().asyncExec(new Runnable() {
				   public void run() {
						while (!previewShell.isDisposed()) {
							if (!previewDisplay.getDefault().readAndDispatch())
								previewDisplay.sleep();

						} 
						previewDisplay.dispose();

				   }
				  });

		 }
		}.start();*/
		
/*		while (!previewShell.isDisposed()) {
			if (!previewDisplay.readAndDispatch())
				previewDisplay.sleep();

		} 
		previewDisplay.dispose();
		System.exit(0);*/

//	}
	
	void closePreview() {
		
//		webBrowser.disposeNativePeer(false);
		
/*		Display.getDefault().syncExec(new Runnable() {
			   public void run() {

				   previewBrowser.dispose();
				   previewShell.dispose();
				   
			   }
			  });

		this.dispose();*/
	}

/*	public void setPreviewURL(File filetourl) {

// URL zur anzuzeigenden Datei setzen, wenn es sich um eine Datei handelt
		

		if (filetourl != null) {
					
			if (filetourl.isFile()) {
				try {
					pv = filetourl.toURI().toURL().toString();

				} catch (MalformedURLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
						   
//				webBrowser.navigate(pv);
				browser_.loadURL(pv);
			} else {
				browser_.loadString("<html><body></body></html>", "http://localhost");
//				webBrowser.setHTMLContent("");
					}
		} else {

			browser_.loadString("<html><body></body></html>", "http://localhost");
//			webBrowser.setHTMLContent("");
		}

	} */
	
}
